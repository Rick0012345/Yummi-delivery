services:
  db:
    image: postgres:15-alpine
    container_name: lanchonete_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=lanchonete_db
      - POSTGRES_USER=lanchonete_user
      - POSTGRES_PASSWORD=lanchonete_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lanchonete_user -d lanchonete_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    container_name: lanchonete_web
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=chave-super-secreta-local
      - DJANGO_DEBUG=1
      - DJANGO_SETTINGS_MODULE=lanchonete.settings 
      - DJANGO_ALLOWED_HOSTS=0.0.0.0,localhost,127.0.0.1
      - DJANGO_CSRF_ORIGINS=http://localhost,http://127.0.0.1
      - DJANGO_CORS_ORIGINS=http://localhost,http://127.0.0.1
      - POSTGRES_DB=lanchonete_db
      - POSTGRES_USER=lanchonete_user
      - POSTGRES_PASSWORD=lanchonete_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

volumes:
  postgres_data: